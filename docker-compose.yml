version: '3.8'

services:
  db:
    image: postgres:13
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "0.0.0.0:5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    volumes:
      - ./server:/app
    ports:
      - "0.0.0.0:8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - "0.0.0.0:5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - api
    networks:
      - app-network
    user: "node"

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: